{$INCLUDE ../ProjectDefines.inc}
unit uAdditionalDict;

interface

Uses
  Windows,
  Classes,
  SysUtils,
  StrUtils,
  Generics.Collections,
  Forms,
  uFunctions,
  uTextStrings,
  Dialogs;

Procedure InitDict;
Procedure LoadDict;
Function SaveDict: Boolean;
Procedure DestroyDict;

Var
  Dict: TDictionary<String, String>;

implementation

Procedure InitDict;
Begin
  Dict := TDictionary<String, String>.create;
  LoadDict;
End;

{ ****************************** N E W    P A R T ****************************** }

Procedure DestroyDict;
Begin
  FreeAndNil(Dict);
End;

{ ****************************** N E W    P A R T ****************************** }

Procedure LoadDict;
Var
  List: TStringList;
  I, P: Integer;
  Path: String;
  FirstPart, SecondPart: String;
{$IFDEF PortableOn}
  adPath: String;
{$ELSE}
  strUserName: PChar;
  unSize: DWord;
  adPath: String;
{$ENDIF}
Begin
{$IFDEF PortableOn}
  adPath := 'AdditionalDict.iwdb';
{$ELSE}
  unSize := 250;
  GetMem(strUserName, unSize);
  getusername(strUserName, unSize);

  adPath := 'AdditionalDict_' + strPas(strUserName) + '.iwdb';

  FreeMem(strUserName);
{$ENDIF}

  if not FileExists(GetShadhinDataDir + adPath) then
  begin
    if not MyCopyFile(GetShadhinDataDir + 'AdditionalDict.iwdb', //
      GetShadhinDataDir + adPath, true) then
    begin
      showmessage('Something Wrong! :(' +  #10 + #10 //
       + 'Error Code: 20001' + #10 + #10 //
       + strErrSryMsg + #10 + #10 + strIWEmail);
    end;
  end;

  Try
    Try
      List := TStringList.create;
      Path := GetShadhinDataDir + adPath;
      List.LoadFromFile(Path);

      For I := 0 To List.Count - 1 Do
      Begin
        If (LeftStr(Trim(List[I]), 1) <> '/') And (Trim(List[I]) <> '') Then
        Begin
          P := Pos('|', Trim(List[I]));
          FirstPart := LeftStr(Trim(List[I]), P - 1);
          SecondPart := MidStr(Trim(List[I]), P + 1, Length(Trim(List[I])));
          Dict.AddOrSetValue(FirstPart, SecondPart);
        End;
      End;
    Except
      On E: Exception Do
      Begin
        Application.MessageBox
          (PChar('Cannot load additional-dictionary!' + #10 + '' + #10 +
              '-> Make sure ''AdditionalDict.iwdb'' file is present in ' +
              Path + ' folder, or' + #10 +
              '-> ''AdditionalDict.iwdb'' file is not corrupt.' + #10 + '' +
              #10 + 'Reinstalling Shadhin Ovidhan may solve this problem.' +
              #10 + #10 + strIfItBug), 'Shadhin Ovidhan',
          MB_OK + MB_ICONHAND + MB_DEFBUTTON1 + MB_APPLMODAL);
      End;
    End;
  Finally
    FreeAndNil(List);
  End;

End;

{ ****************************** N E W    P A R T ****************************** }

Function SaveDict: Boolean;
Var
  T: TStringList;
  I: Integer;
  Path: String;
  S: String;

{$IFDEF PortableOn}
  adPath: String;
{$ELSE}
  strUserName: PChar;
  unSize: DWord;
  adPath: String;
{$ENDIF}
Begin
{$IFDEF PortableOn}
  adPath := 'AdditionalDict.iwdb';
{$ELSE}
  unSize := 250;
  GetMem(strUserName, unSize);
  getusername(strUserName, unSize);

  adPath := 'AdditionalDict_' + strPas(strUserName) + '.iwdb';

  FreeMem(strUserName);
{$ENDIF}

   result := False;
  T := TStringList.create;

  T.BeginUpdate;
  With T Do
  Begin
    Add('/ **************************************');
    Add('/ Shadhin Ovidhan additional dictionary');
    Add('/ Copyright (c) Imaginative World. All rights reserved.');
    Add('/ Web: http://imaginativeworld.org');
    Add('/');
    Add('/ Warning: DO NOT EDIT THIS FILE MANUALLY');
    Add('/ **************************************');

    // For I := 0 To dict.Count - 1 Do
    // Begin
    // Add(List.Items.Item[I].Caption + ' ' + List.Items.Item[I].SubItems[0]);
    // End;

    For S in Dict.Keys Do
    Begin

      Add(S + '|' + Dict.Items[S]);

    End;

  End;
  T.EndUpdate;

  Try
    // if FullPath <> '' then
    // Path := FullPath
    // else
    Path := GetShadhinDataDir + adPath;

    T.SaveToFile(Path, TEncoding.Unicode);
    DestroyDict;
    InitDict;
    // LoadDict;
    result := True;
  Except
    On E: Exception Do
    Begin
      Application.MessageBox
        (PChar('Cannot save to additional-dictionary!' + #10 + #10 +
            '-> Make sure the disk is not write protected, or' + #10 + //
            '-> ' + Path + ' file is not ''Read Only'', or' + #10 +
            '-> You have necessary account privilege to modify content.' +
            #10 + 'Please ask your System Administrator.' + #10 + #10 +
            strIfItBug), 'Shadhin Ovidhan',
        MB_OK + MB_ICONHAND + MB_DEFBUTTON1 + MB_APPLMODAL);
       result := False;
    End;
  End;

  T.Free;
end;

{ ****************************** N E W    P A R T ****************************** }

end.
